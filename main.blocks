<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="}IC:*y4T1,..m3z.ywI1">players</variable><variable id="_De?dZ#;wxXN7NI3Fz*)">p</variable><variable id="Ch,c)gi$Z-qAvgbMsi9u">q</variable><variable id="J.[^s3`jytAh6^aC)ImO">r</variable><variable id="w1%B;,,2%SJA=e?os{+V">patientZero</variable><variable id="Jp;n6$?q[7gmsv!J7HvP">state</variable><variable id="X%TJRJLQpD,dxyXhmhE|">master</variable><variable id="95i]r)YaP+9giSbh-BM#">paired</variable><variable id="q7hsAwvlkb94udEIAp[9">signal</variable><variable id="yKym`n_buri!p?jq$pFm">INCUBATION</variable><variable id="KmBFyiH^ByDDZl@aiJfZ">DEATH</variable><variable id="%mda7WO~+n:+);U.%M,{">RSSI</variable><variable id="%h=~lcCownpaAOqInaHF">TRANSMISSIONPROB</variable><variable id="/~2vn}^DES.%+U+9)SB}">playerIcons</variable><variable id="%!AA$05FgP=dz@QmkiVy">infectedBy</variable><variable id="_dBqhY-EAbo+~E-FJAl3">playerIcon</variable></variables><comment id="0kYG*QI+qlfE%ZL3JTu*" data="2" x="634" y="0" h="120" w="160">player state</comment><comment id="C`*LxxJEp1$q_~P;?NA:" data="1" x="634" y="133" h="120" w="160">master state</comment><comment id="NBM})_{61a|:K=YBMf`5" data="0" x="634" y="266" h="360" w="480">Infection game&#10;&#10;Flash all micro:bits with this script&#10;&#10;Press A+B to enter master mode (1 per game)&#10;&#10;Wait for players to be paired. The number of paired player will display on screen.&#10;An icon will appear on player's screen.&#10;&#10;Press A+B to start the infection game. The master will pick a random&#10;player as patient zero.&#10;&#10;A player will transmit the disease if close enough (RSSI)&#10;and with a certain probability (TRANSMISSIONPROB).&#10;During the incudation phase (INCUBATION), the player does not show any sign&#10;of illness. 之後，悲傷的圖示就會出現在螢幕。&#10;&#10;The game will automatically stop once all players are dead or healthy. The master can&#10;also press A+B again to stop the game.&#10;&#10;Once the game is over, the micro:bit will show the player id (A,B,C...), health and&#10;who infected him.&#10;&#10;Icons used in the game:&#10;&#10;Pairing: IconNames.Ghost&#10;Paired: IconNames.Happy&#10;Dead: IconNames.Skull&#10;Sick: IconNames.Sad&#10;Incubating: IconNames.Confused&#10;Healthy: IconNames.Happy</comment><block type="pxt-on-start" id="ouXt)aJlrGSkJyI8TA^m" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="||wm6`_~djx|o_)0yuD)" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let infectedTime = 0" numlines="1" declaredvars="infectedTime"></mutation><next><block type="typescript_statement" id="|3o_yXLn5[D^5[3zI^Hb" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let paired = false" numlines="1" declaredvars="paired"></mutation><next><block type="typescript_statement" id="Tytq5UM~}zi$-~N30_$g" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let players: Player[] = []" numlines="1" declaredvars="players"></mutation><next><block type="variables_set" id="c_Bhp}5w2x1Q4Kcs!xcF"><field name="VAR" id="yKym`n_buri!p?jq$pFm">INCUBATION</field><comment>time before showing symptoms</comment><data>0</data><value name="VALUE"><shadow type="math_number" id="!.VETN@PW*j.Q1JD?uv5"><field name="NUM">20000</field></shadow></value><next><block type="variables_set" id="brRd0Mwh|}pNS2w9Z~p="><field name="VAR" id="KmBFyiH^ByDDZl@aiJfZ">DEATH</field><comment>time before dying off the disease</comment><value name="VALUE"><shadow type="math_number" id="XP@oEUdnqc=;J.j$kAJ2"><field name="NUM">40000</field></shadow></value><next><block type="variables_set" id="7RjK(K*5:#jW~?^V7dtv"><field name="VAR" id="%mda7WO~+n:+);U.%M,{">RSSI</field><comment>db</comment><value name="VALUE"><shadow type="math_number" id="=?7IDd(q}#x;nfCJ}td@"><field name="NUM">-45</field></shadow></value><next><block type="variables_set" id="fC=4!NsV`R[|j@Hl3wRF"><field name="VAR" id="%h=~lcCownpaAOqInaHF">TRANSMISSIONPROB</field><comment>% probability to transfer disease</comment><value name="VALUE"><shadow type="math_number" id="VASUT.j,u@^Lhf=$AaCS"><field name="NUM">40</field></shadow></value><next><block type="typescript_statement" id="EB3@CDa-Wr_n4h:uCEr4" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum GameState {" line1="    Stopped," line2="    Pairing," line3="    Infecting," line4="    Running," line5="    Over" line6="}" numlines="7"></mutation><next><block type="typescript_statement" id="R];o%yBi!yaW.Pz?tqpT" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum HealthState {" line1="    Healthy," line2="    Incubating," line3="    Sick," line4="    Dead" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id="*p=EI!0K[eyPG;PVP0p*" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum MessageKind {" line1="    PairRequest," line2="    PairConfirmation," line3="    HealthSet," line4="    HealthValue," line5="    InitialInfect," line6="    TransmitVirus," line7="    GameState" line8="}" numlines="9"></mutation><next><block type="typescript_statement" id="P*LWI3Bs/4m+xDxC[v3(" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="const GameIcons = {" line1="    Pairing: IconNames.Ghost," line2="    Paired: IconNames.Happy," line3="    Dead: IconNames.Skull," line4="    Sick: IconNames.Sad," line5="    Incubating: IconNames.Confused," line6="    Healthy: IconNames.Happy" line7="}" numlines="8" declaredvars="GameIcons"></mutation><next><block type="typescript_statement" id="Y~mIM_UHeC@FJX~)*B6X" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Message {" line1="" line2="    private _data: Buffer;" line3="" line4="    constructor(input?: Buffer) {" line5="        this._data = input || control.createBuffer(13);" line6="    }" line7="" line8="    get kind(): number {" line9="        return this._data.getNumber(NumberFormat.Int8LE, 0);" line10="    }" line11="" line12="    set kind(x: number) {" line13="        this._data.setNumber(NumberFormat.Int8LE, 0, x);" line14="    }" line15="" line16="    get fromSerialNumber(): number {" line17="        return this._data.getNumber(NumberFormat.Int32LE, 1);" line18="    }" line19="" line20="    set fromSerialNumber(x: number) {" line21="        this._data.setNumber(NumberFormat.Int32LE, 1, x);" line22="    }" line23="" line24="    get value(): number {" line25="        return this._data.getNumber(NumberFormat.Int32LE, 5);" line26="    }" line27="" line28="    set value(x: number) {" line29="        this._data.setNumber(NumberFormat.Int32LE, 5, x);" line30="    }" line31="" line32="    get toSerialNumber(): number {" line33="        return this._data.getNumber(NumberFormat.Int32LE, 9);" line34="    }" line35="" line36="    set toSerialNumber(x: number) {" line37="        this._data.setNumber(NumberFormat.Int32LE, 9, x);" line38="    }" line39="" line40="    send() {" line41="        radio.sendBuffer(this._data);" line42="        basic.pause(250);" line43="    }" line44="}" numlines="45"></mutation><next><block type="variables_set" id=").Vy}~5q77(g]_|B|jQa"><field name="VAR" id="/~2vn}^DES.%+U+9)SB}">playerIcons</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="text" id=";vX:]yFU;]QDP%$Cxs~Z"><field name="TEXT">ABCDEFGHIJKLMNOPQRSTUVWXYZ</field></block></value><next><block type="typescript_statement" id="]vC+S42;Am)4nJ_rj1}?" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Player {" line1="    id: number;" line2="    icon: number;" line3="    health: HealthState;" line4="    show() {" line5="        basic.showString(playerIcons[this.icon]);" line6="    }" line7="}" numlines="8"></mutation><next><block type="typescript_statement" id="Y^]h{e3OfYe_Ks/T;otr" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let state = GameState.Stopped;" numlines="1" declaredvars="state"></mutation><next><block type="typescript_statement" id="%wb!Ow6/mv2H9I:EyG*b" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let patientZero: Player;" numlines="1" declaredvars="patientZero"></mutation><next><block type="variables_set" id="b3{XjN{5L3+T%%QhQkwN"><field name="VAR" id="%!AA$05FgP=dz@QmkiVy">infectedBy</field><comment>who infected (playerIcon)</comment><value name="VALUE"><shadow type="math_number" id="aPu@qOj1i~Sta{eeAb{U"><field name="NUM">-1</field></shadow></value><next><block type="variables_set" id="IaWcS_K{Qit,p;Q[Y#$Y"><field name="VAR" id="_dBqhY-EAbo+~E-FJAl3">playerIcon</field><comment>local time when infection happened&#10;player icon and identity</comment><value name="VALUE"><shadow type="math_number" id="Fw$E7q3HC_QHgk];54sn"><field name="NUM">-1</field></shadow></value><next><block type="typescript_statement" id="pUgNqN%Ni$3Roz^0Crp=" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let health = HealthState.Healthy;" numlines="1" declaredvars="health"></mutation><next><block type="radio_set_group" id="fZWQfv2]p%/6YY}Ba2v^"><value name="ID"><shadow type="math_number_minmax" id="pJ379J7MS6]eAONpoc82"><mutation min="0" max="255" label="Number" precision="0"/><field name="SLIDER">42</field></shadow></value><next><block type="typescript_statement" id="Jg9qnywG]:;-HZ=pi2F#" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="basic.showIcon(GameIcons.Pairing)" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="function_definition" id="!NIx+9c23s`XlO0o5)D0" x="1159" y="0"><mutation name="player" functionid="alblqTc1w|lp-yyAWlhS"><arg name="id" id="d6sb08u3xv651lqoqitn" type="number"/></mutation><field name="function_name">player</field><comment>get a player instance (creates one as needed)</comment><statement name="STACK"><block type="pxt_controls_for_of" id="G-8$.|uBWQF:N,[2Dfgd"><value name="LIST"><block type="variables_get" id="4|Hs:P/lZ8J@xnfQ2]r!"><field name="VAR" id="}IC:*y4T1,..m3z.ywI1">players</field></block></value><value name="VAR"><shadow type="variables_get_reporter" id="iX)18ID@/T?W~0gw2tqu"><field name="VAR" id="_De?dZ#;wxXN7NI3Fz*)">p</field></shadow></value><statement name="DO"><block type="controls_if" id="ZNhe#=|T`vRsyj;qyPVI"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="%=rt{,/7w#MIomb|i4yR"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="9b@$!{w+?}*7fRGx,WYK" editable="false"><field name="EXPRESSION">p.id</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="argument_reporter_number" id="o?V#_#/bhW`/BN}{H;^b"><field name="VALUE">id</field></block></value></block></value><statement name="DO0"><block type="function_return" id=",Q[?JW|(+q)o]U@N8B94"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="u?TePj?r=-RRBu}M;vh~"><field name="VAR" id="_De?dZ#;wxXN7NI3Fz*)">p</field></block></value></block></statement></block></statement><next><block type="typescript_statement" id="w}F/CDBQHfHGP(EVTbU[" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let q = new Player();" numlines="1" declaredvars="q"></mutation><next><block type="typescript_statement" id="lqrp4jNkIR!AnReQtnLl" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.id = id;" numlines="1"></mutation><next><block type="typescript_statement" id="cXb`Rr^epc]|I01,_[g:" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.icon = (players.length + 1) % playerIcons.length;" numlines="1"></mutation><next><block type="typescript_statement" id="lspfGByY*Bs4To:ccCm|" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.health = HealthState.Healthy;" numlines="1"></mutation><next><block type="array_push" id="xg3]xhOelZs.Y?SJg6#Q"><value name="list"><block type="variables_get" id="P@oA4C@)+5XK]-yKoi}l"><field name="VAR" id="}IC:*y4T1,..m3z.ywI1">players</field></block></value><value name="value"><block type="variables_get" id="L!4mPmr_Od{0I1?n=uOQ"><field name="VAR" id="Ch,c)gi$Z-qAvgbMsi9u">q</field></block></value><next><block type="serial_writeline" id="]*@S-HcbYB^aJD[gxSY]"><value name="text"><block type="typescript_expression" id="]0S*ctY[@e1~z+(NEd*f" editable="false"><field name="EXPRESSION">`player ==&gt; ${q.id}`</field></block></value><next><block type="function_return" id="$PM{{quD]ENgbg.$lS50"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="dHfQUtfSOsrdy6GAxTrc"><field name="VAR" id="Ch,c)gi$Z-qAvgbMsi9u">q</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="function_definition" id="u[cHdtHQa9U1Dvmw1x+X" x="1736" y="0"><mutation name="allDead" functionid="e`2T2otAlOrEAPHIw`u*"/><field name="function_name">allDead</field><statement name="STACK"><block type="pxt_controls_for_of" id=",wI1gib{zh+u6T5bGPi,"><value name="LIST"><block type="variables_get" id="y^Z.YFnwH_D6qT(_?BmG"><field name="VAR" id="}IC:*y4T1,..m3z.ywI1">players</field></block></value><value name="VAR"><shadow type="variables_get_reporter" id="uyRP`N|){Ib,4j%jrJ?Z"><field name="VAR" id="J.[^s3`jytAh6^aC)ImO">r</field></shadow></value><statement name="DO"><block type="controls_if" id="Dq1`E5^J_WN#MGn1*E/2"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="TaC)kXFh+W|zLh_M:Rx;"><field name="OP">NEQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="xuh(4,$MIna134nJef=#" editable="false"><field name="EXPRESSION">r.health</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="B`iHs{[[a^Cb^}$w/0d?" editable="false"><field name="EXPRESSION">HealthState.Dead</field></block></value></block></value><statement name="DO0"><block type="function_return" id="^$`rg]i_DtPh`gX`?[}A"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="6:w]{+S@k}]8-tIyd_HY"><field name="BOOL">FALSE</field></block></value></block></statement></block></statement><next><block type="function_return" id="#MZMCs#KeHJ-=^AiE?M|"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="sxknLMj_GT8Le;qLH73%"><field name="BOOL">TRUE</field></block></value></block></next></block></statement></block><block type="function_definition" id="_Sku@mg=Kl3F[i)*i%h*" x="2409" y="0"><mutation name="gameOver" functionid="RLgTdn+7lkwQbO=+qEn^"/><field name="function_name">gameOver</field><statement name="STACK"><block type="typescript_statement" id="Mw#1-NNu+:pKQGpsdzhF" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Over;" numlines="1"></mutation><next><block type="controls_if" id="i!wwC*K!1tZ)p7T_yX|X"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="|?[j/{q#|(md?=]./e%S"><field name="VAR" id="w1%B;,,2%SJA=e?os{+V">patientZero</field></block></value><statement name="DO0"><block type="typescript_statement" id="NA6+/_fn#9)_*B{(5aEl" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="patientZero.show();" numlines="1"></mutation></block></statement></block></next></block></statement></block><block type="function_definition" id="T=b]lBJ[G:#,$65?zqq," x="2773" y="0"><mutation name="gameFace" functionid="{.PQ+-h6C:}LpcFX`.u-"/><field name="function_name">gameFace</field><statement name="STACK"><block type="typescript_statement" id="k;g%~48{$*!/cNOu|(IX" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="        case GameState.Stopped:" line2="            basic.showIcon(GameIcons.Pairing);" line3="            break;" line4="        case GameState.Pairing:" line5="            if (playerIcon &gt; -1)" line6="                basic.showString(playerIcons[playerIcon]);" line7="            else" line8="                basic.showIcon(paired ? GameIcons.Paired : GameIcons.Pairing, 1);" line9="            break;" line10="        case GameState.Infecting:" line11="        case GameState.Running:" line12="            switch (health) {" line13="                case HealthState.Dead:" line14="                    basic.showIcon(GameIcons.Dead, 1);" line15="                    break;" line16="                case HealthState.Sick:" line17="                    basic.showIcon(GameIcons.Sick, 1);" line18="                    break;" line19="                default:" line20="                    basic.showIcon(GameIcons.Healthy, 1);" line21="                    break;" line22="            }" line23="            break;" line24="        case GameState.Over:" line25="            // show id" line26="            basic.showString(playerIcons[playerIcon]);" line27="            basic.pause(2000);" line28="            // show health" line29="            switch (health) {" line30="                case HealthState.Dead:" line31="                    basic.showIcon(GameIcons.Dead, 2000);" line32="                    break;" line33="                case HealthState.Sick:" line34="                    basic.showIcon(GameIcons.Sick, 2000);" line35="                    break;" line36="                case HealthState.Incubating:" line37="                    basic.showIcon(GameIcons.Incubating, 2000);" line38="                    break;" line39="                default:" line40="                    basic.showIcon(GameIcons.Healthy, 2000);" line41="                    break;" line42="            }" line43="            // show how infected" line44="            if (infectedBy &gt; -1) {" line45="                basic.showString(&quot; INFECTED BY&quot;);" line46="                basic.showString(playerIcons[infectedBy]);" line47="                basic.pause(2000);" line48="            } else {" line49="                basic.showString(&quot; PATIENT ZERO&quot;);" line50="                basic.pause(2000);" line51="            }" line52="            // show score" line53="            game.showScore();" line54="            basic.pause(1000);" line55="            break;" line56="    }" numlines="57"></mutation></block></statement></block><block type="device_button_event" id="e~u6j3uk##,HY1uTn}iX" x="3615" y="0"><field name="NAME">Button.AB</field><statement name="HANDLER"><block type="controls_if" id="YXw9J~U#=Sh`XCdytysc"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id="yQ%gI1#`G1%Gw#kCb~I2"><field name="OP">AND</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="VYjO+GtN/g^Et1Wk5zt-"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="u5)3eYod|!*ZKi%AB-]L"><field name="VAR" id="Jp;n6$?q[7gmsv!J7HvP">state</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="*t*XWvL)JkA#SVuW]EQi" editable="false"><field name="EXPRESSION">GameState.Stopped</field></block></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="|koNy4[5:1q|(u;R2N-9"><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id=".a.nTw]gitlBrNk4$^QL"><field name="VAR" id="X%TJRJLQpD,dxyXhmhE|">master</field></block></value></block></value></block></value><statement name="DO0"><block type="variables_set" id="u-UZ^K/ZhSV|pe9BDj^8"><field name="VAR" id="X%TJRJLQpD,dxyXhmhE|">master</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id=";?|da/l!0G*wUugi/d(z"><field name="BOOL">TRUE</field></block></value><next><block type="variables_set" id="x/Tq6)tcsDq9V+@V9-Wr"><field name="VAR" id="95i]r)YaP+9giSbh-BM#">paired</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="7@hzycetx=/y/V-5G!$j"><field name="BOOL">TRUE</field></block></value><next><block type="typescript_statement" id="Wkq5C.,hhmVEIa0iHST^" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Pairing;" numlines="1"></mutation><next><block type="serial_writeline" id="xb{7if`+@}gWJ)dis7PX"><value name="text"><shadow type="text" id="|5LKPGz6n-x#N?Nyx1nL"><field name="TEXT">registered as master</field></shadow></value><next><block type="radio_set_transmit_power" id="W0/5tUPZW80c?pm|k:zz"><value name="power"><shadow type="math_number_minmax" id=",cI/Spd$KB:?0*fWhfey"><mutation min="0" max="7" label="Number" precision="0"/><field name="SLIDER">7</field></shadow></value><next><block type="device_print_message" id="bi!VQE-2AaR{d%)l8OD("><value name="text"><shadow type="text" id="hcqDfOt0C26$!q{6b@(Q"><field name="TEXT">0</field></shadow></value><next><block type="typescript_statement" id="9p@7f04li!}_ORg*1{5~" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="return;" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type="controls_if" id="-Qg{IJ:?dvFT_2U4;]%c"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="`:d^@]6E.)EA;};`x!(w"><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="3Q9IqFLPn}j?G$TS0-kv"><field name="VAR" id="X%TJRJLQpD,dxyXhmhE|">master</field></block></value></block></value><statement name="DO0"><block type="typescript_statement" id="{?^@{L^XVMNm7sqI?WG!" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="return;" numlines="1"></mutation></block></statement><next><block type="controls_if" id="8H=q#l)?U~@ND!he%mGs"><mutation elseif="1"/><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="MeGfZ}:JuY(AX:{M`aW!"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="fY{5rjU;W6-MA9_evD~p"><field name="VAR" id="Jp;n6$?q[7gmsv!J7HvP">state</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="N?K17a*$v$1%:$(+UZxw" editable="false"><field name="EXPRESSION">GameState.Pairing</field></block></value></block></value><statement name="DO0"><block type="variables_set" id="E.L8|bt-BHvG83@yP;8x"><field name="VAR" id="w1%B;,,2%SJA=e?os{+V">patientZero</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="=`]?beu~z*dexNc/4)B%"><value name="LIST"><block type="variables_get" id="dZ,YjZ8Xl@Fm3GaC3ac`"><field name="VAR" id="}IC:*y4T1,..m3z.ywI1">players</field></block></value><value name="INDEX"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="device_random" id="*xH|K!qT|g?{cNf[_-?J"><value name="min"><shadow type="math_number" id="WrhXR8:AnXFIz)y?StJ]"><field name="NUM">0</field></shadow></value><value name="limit"><block type="math_arithmetic" id="NO{cElGKEy9pD^3M-}qs"><field name="OP">MINUS</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_length" id="-lLZ?4inIQ.ByqiGrT7j"><value name="VALUE"><block type="variables_get" id="AHEpldeH,?QwaMn)mw@m"><field name="VAR" id="}IC:*y4T1,..m3z.ywI1">players</field></block></value></block></value><value name="B"><shadow type="math_number" id="9efDoR{]Hy2!SZ.f=ro*"><field name="NUM">1</field></shadow></value></block></value></block></value></block></value><next><block type="typescript_statement" id="!@ip?1,fnV{]VEHVBzpZ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Infecting;" numlines="1"></mutation><next><block type="serial_writeline" id="B@af2}6uskCGyym,Cf{L"><value name="text"><block type="typescript_expression" id="[bulN=}n=EQfJlw/5K.6" editable="false"><field name="EXPRESSION">`game started ${players.length} players`</field></block></value></block></next></block></next></block></statement><value name="IF1"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="_.umi2F){U_Fk`hC{]nZ"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="N0F*5%%CF|zU.|m3vGCH"><field name="VAR" id="Jp;n6$?q[7gmsv!J7HvP">state</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="I6+sKyOE9IuS|sHq27Ni" editable="false"><field name="EXPRESSION">GameState.Running</field></block></value></block></value><statement name="DO1"><block type="function_call" id="^h`q)5[y5N#z_Z#p.kU6"><mutation name="gameOver" functionid="RLgTdn+7lkwQbO=+qEn^"/></block></statement></block></next></block></next></block></statement></block><block type="radio_on_buffer_drag" id="Qu$I~nTdiymXu^H]s$gB" x="4793" y="0"><value name="HANDLER_DRAG_PARAM_receivedBuffer"><shadow type="argument_reporter_custom" id="^t`:g1ngZuXr=k.5x^W,"><mutation typename="Buffer"/><field name="VALUE">receivedBuffer</field></shadow></value><statement name="HANDLER"><block type="typescript_statement" id="A]Q_Pllch}]`^cLP:z;8" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="const incomingMessage = new Message(receivedBuffer);" numlines="1" declaredvars="incomingMessage"></mutation><next><block type="variables_set" id="n$25M0?`/=?co%PF_~^="><field name="VAR" id="q7hsAwvlkb94udEIAp[9">signal</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="radio_received_packet" id="MC/Aiq0g2U%EQo9[BfDa"><value name="type"><shadow type="radio_packet_property" id="cz$%aCN+@w_VUlLzLDe%"><field name="note">RadioPacketProperty.SignalStrength</field></shadow></value></block></value><next><block type="controls_if" id=")itO34nHc$4pKUS01x`L"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="~dr6(X|3QqtC8TuaAX7R"><field name="VAR" id="X%TJRJLQpD,dxyXhmhE|">master</field></block></value><statement name="DO0"><block type="typescript_statement" id="e:v2A]$iIGVFQXpw+c{Y" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (incomingMessage.kind) {" line1="            case MessageKind.PairRequest:" line2="                // register player" line3="                let n = players.length;" line4="                player(incomingMessage.fromSerialNumber);" line5="                // show player number if changed" line6="                if (n != players.length) {" line7="                    basic.showNumber(players.length);" line8="                }" line9="                break;" line10="            case MessageKind.HealthValue:" line11="                let s = player(incomingMessage.fromSerialNumber);" line12="                s.health = incomingMessage.value;" line13="                // check if all infected" line14="                if (allDead())" line15="                    gameOver();" line16="                break;" line17="        }" numlines="18"></mutation></block></statement><statement name="ELSE"><block type="typescript_statement" id="`GUBan3hmGUi|AMD4:]$" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (incomingMessage.kind) {" line1="            case MessageKind.GameState:" line2="                // update game state" line3="                state = incomingMessage.value as GameState;" line4="                break;" line5="            case MessageKind.InitialInfect:" line6="                if (infectedBy &lt; 0 &amp;&amp;" line7="                    incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line8="                    // infected by master" line9="                    infectedBy = 0; // infected my master" line10="                    infectedTime = input.runningTime();" line11="                    health = HealthState.Incubating;" line12="                    serial.writeLine(`infected ${control.deviceSerialNumber()}`);" line13="                }" line14="                break;" line15="            case MessageKind.HealthSet:" line16="                if (incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line17="                    const newHealth = incomingMessage.value;" line18="                    if (health &lt; newHealth) {" line19="                        health = newHealth;" line20="                    }" line21="                }" line22="                break;" line23="            case MessageKind.PairConfirmation:" line24="                if (!paired &amp;&amp; state == GameState.Pairing &amp;&amp;" line25="                    incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line26="                    // paired!" line27="                    serial.writeLine(`player paired ==&gt; ${control.deviceSerialNumber()}`)" line28="                    playerIcon = incomingMessage.value;" line29="                    paired = true;" line30="                }" line31="                break;" line32="            case MessageKind.TransmitVirus:" line33="                if (state == GameState.Running) {" line34="                    if (health == HealthState.Healthy) {" line35="                        serial.writeLine(`signal: ${signal}`);" line36="                        if (signal &gt; RSSI &amp;&amp;" line37="                            randint(0, 100) &gt; TRANSMISSIONPROB) {" line38="                            infectedBy = incomingMessage.value;" line39="                            infectedTime = input.runningTime();" line40="                            health = HealthState.Incubating;" line41="                        }" line42="                    }" line43="                }" line44="                break;" line45="            case MessageKind.HealthValue:" line46="                if (health != HealthState.Dead &amp;&amp; signal &gt; RSSI) {" line47="                    game.addScore(1);" line48="                }" line49="                break;" line50="        }" numlines="51"></mutation></block></statement></block></next></block></next></block></statement></block><block type="device_forever" id="_jS(3Ol+!p2se0Xn`f;W" x="5773" y="0"><statement name="HANDLER"><block type="typescript_statement" id="@h_6IzEP|@[~fA]ET~=h" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let message: Message;" numlines="1" declaredvars="message"></mutation><next><block type="controls_if" id="k_Y3d(ndD(*1J(IZck3#"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="=b-c5@3`M{lddku4]+}o"><field name="VAR" id="X%TJRJLQpD,dxyXhmhE|">master</field></block></value><statement name="DO0"><block type="typescript_statement" id="^!Q;)vuB`I@)Y1QF[@_z" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="            case GameState.Pairing:" line2="                // tell each player they are registered" line3="                for (const t of players) {" line4="                    message = new Message();" line5="                    message.kind = MessageKind.PairConfirmation;" line6="                    message.value = t.icon;" line7="                    message.toSerialNumber = t.id;" line8="                    message.send();" line9="                }" line10="                serial.writeLine(`pairing ${players.length} players`);" line11="                basic.pause(500);" line12="                break;" line13="            case GameState.Infecting:" line14="                if (patientZero.health == HealthState.Healthy) {" line15="                    message = new Message();" line16="                    message.kind = MessageKind.InitialInfect;" line17="                    message.toSerialNumber = patientZero.id;" line18="                    message.send();" line19="                    basic.pause(100);" line20="                } else {" line21="                    serial.writeLine(`patient ${patientZero.id} infected`);" line22="                    // show startup" line23="                    basic.showIcon(GameIcons.Dead);" line24="                    state = GameState.Running;" line25="                }" line26="                break;" line27="            case GameState.Running:" line28="                for (const u of players) {" line29="                    message = new Message();" line30="                    message.kind = MessageKind.HealthSet;" line31="                    message.value = u.health;" line32="                    message.toSerialNumber = u.id;" line33="                    message.send();" line34="                }" line35="                break;" line36="            case GameState.Over:" line37="                if (patientZero)" line38="                    patientZero.show();" line39="                break;" line40="        }" numlines="41"></mutation><next><block type="typescript_statement" id="7K!Jk%3@_wcl=VX[7?dZ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message = new Message()" numlines="1"></mutation><next><block type="typescript_statement" id="u;m3k!1)B9Wg@8a:}oX[" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.kind = MessageKind.GameState;" numlines="1"></mutation><next><block type="typescript_statement" id="_5=4kp?AEi2(pYqDL=QB" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.value = state;" numlines="1"></mutation><next><block type="typescript_statement" id="[RI%Mi,4hmtCxrqv|ztw" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.send();" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></statement><statement name="ELSE"><block type="typescript_statement" id="t]@V~3jsH8Q%Coa7X6U6" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="            case GameState.Pairing:" line2="                // broadcast player id" line3="                if (playerIcon &lt; 0) {" line4="                    message = new Message();" line5="                    message.kind = MessageKind.PairRequest;" line6="                    message.fromSerialNumber = control.deviceSerialNumber();" line7="                    message.send();" line8="                } else if (infectedBy &gt; -1) {" line9="                    message = new Message();" line10="                    message.kind = MessageKind.HealthValue;" line11="                    message.fromSerialNumber = control.deviceSerialNumber();" line12="                    message.value = health;" line13="                    message.send();" line14="                }" line15="                break;" line16="            case GameState.Infecting:" line17="                message = new Message();" line18="                message.kind = MessageKind.HealthValue;" line19="                message.fromSerialNumber = control.deviceSerialNumber();" line20="                message.value = health;" line21="                message.send();" line22="                break;" line23="            case GameState.Running:" line24="                // update health status" line25="                if (health != HealthState.Healthy &amp;&amp; input.runningTime() - infectedTime &gt; DEATH)" line26="                    health = HealthState.Dead;" line27="                else if (health != HealthState.Healthy &amp;&amp; input.runningTime() - infectedTime &gt; INCUBATION)" line28="                    health = HealthState.Sick;" line29="                // transmit disease" line30="                if (health == HealthState.Incubating || health == HealthState.Sick) {" line31="                    message = new Message();" line32="                    message.kind = MessageKind.TransmitVirus;" line33="                    message.fromSerialNumber = control.deviceSerialNumber();" line34="                    message.value = playerIcon;" line35="                    message.send();" line36="                }" line37="                message = new Message();" line38="                message.kind = MessageKind.HealthValue;" line39="                message.fromSerialNumber = control.deviceSerialNumber();" line40="                message.value = health;" line41="                message.send();" line42="                break;" line43="        }" numlines="44"></mutation><next><block type="function_call" id="Gl#O0Xx#xIy*6UN`NqN`"><mutation name="gameFace" functionid="{.PQ+-h6C:}LpcFX`.u-"/></block></next></block></statement></block></next></block></statement></block></xml>